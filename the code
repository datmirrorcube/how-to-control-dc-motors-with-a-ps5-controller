
import RPi.GPIO as GPIO          
from time import sleep
import signal
import sys
from pyPS4Controller.controller import Controller

# Motor 1 control pins
in1 = 24
in2 = 23
en = 25

# Motor 2 control pins (for the second motor)
in3 = 17
in4 = 27
en2 = 22

# Initialize GPIO
GPIO.setmode(GPIO.BCM)

# Motor 1 setup
GPIO.setup(in1, GPIO.OUT)
GPIO.setup(in2, GPIO.OUT)
GPIO.setup(en, GPIO.OUT)
GPIO.output(in1, GPIO.LOW)
GPIO.output(in2, GPIO.LOW)
p = GPIO.PWM(en, 100)
p.start(0)  # Initially off

# Motor 2 setup
GPIO.setup(in3, GPIO.OUT)
GPIO.setup(in4, GPIO.OUT)
GPIO.setup(en2, GPIO.OUT)
GPIO.output(in3, GPIO.LOW)
GPIO.output(in4, GPIO.LOW)
p2 = GPIO.PWM(en2, 100)
p2.start(0)  # Initially off

print("\n")
print("Press R1 to toggle Motor 1 on/off.")
print("Press L1 to toggle Motor 2 on/off.")

# Define a controller class to handle the button events
class MyController(Controller):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.motor1_on = False  # Flag to track Motor 1 state (on/off)
        self.motor2_on = False  # Flag to track Motor 2 state (on/off)
    
    def on_R1_press(self):
        # Toggle motor 1 on/off when R1 is pressed
        if self.motor1_on:
            print("R1 pressed - Turning Motor 1 off")
            # Stop Motor 1
            GPIO.output(in1, GPIO.LOW)
            GPIO.output(in2, GPIO.LOW)
            p.ChangeDutyCycle(0)  # Stop motor 1
            self.motor1_on = False  # Set motor 1 state to off
        else:
            print("R1 pressed - Turning Motor 1 on")
            self.motor1_on = True  # Set motor 1 state to on

            # Start motor 1 (default to forward at 50% speed)
            p.ChangeDutyCycle(50)
            GPIO.output(in1, GPIO.HIGH)
            GPIO.output(in2, GPIO.LOW)
    
    def on_L1_press(self):
        # Toggle motor 2 on/off when L1 is pressed
        if self.motor2_on:
            print("L1 pressed - Turning Motor 2 off")
            # Stop Motor 2
            GPIO.output(in3, GPIO.LOW)
            GPIO.output(in4, GPIO.LOW)
            p2.ChangeDutyCycle(0)  # Stop motor 2
            self.motor2_on = False  # Set motor 2 state to off
        else:
            print("L1 pressed - Turning Motor 2 on")
            self.motor2_on = True  # Set motor 2 state to on

            # Start motor 2 (default to forward at 50% speed)
            p2.ChangeDutyCycle(50)
            GPIO.output(in3, GPIO.HIGH)
            GPIO.output(in4, GPIO.LOW)
    
    def on_playstation_button_press(self, value):
        print(f"PlayStation button pressed with value: {value}")
        GPIO.cleanup()
        print("GPIO cleaned up")
        sys.exit(0)

# Set up a safe exit on program termination (CTRL+C)
def signal_handler(sig, frame):
    print('Exiting...')
    GPIO.cleanup()
    sys.exit(0)

signal.signal(signal.SIGINT, signal_handler)

# Initialize and pair the controller 
controller = MyController(interface="/dev/input/js0", connecting_using_ds4drv=False)
controller.listen()
